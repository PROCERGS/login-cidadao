parameters:
    validator.sector_identifier_uri.class: LoginCidadao\OpenIDBundle\Validator\Constraints\SectorIdentifierUriValidator
    checker.sector_identifier_uri.class: LoginCidadao\OpenIDBundle\Validator\SectorIdentifierUriChecker

    oidc.person.serialize.listener.class: LoginCidadao\OpenIDBundle\EventListener\PersonSerializeEventListener
    oidc.storage.session_state.class: LoginCidadao\OpenIDBundle\Storage\SessionState

    oauth2.storage.authorization_code.class: LoginCidadao\OpenIDBundle\Storage\AuthorizationCode
    oauth2.storage.client_credentials.class: LoginCidadao\OpenIDBundle\Storage\ClientCredentials
    oauth2.storage.refresh_token.class: LoginCidadao\OpenIDBundle\Storage\RefreshToken
    oauth2.storage.access_token.class: LoginCidadao\OpenIDBundle\Storage\AccessToken

    oauth2.grant_type.authorization_code.class: LoginCidadao\OpenIDBundle\GrantType\AuthorizationCode

    oauth2.response_types.id_token.class: LoginCidadao\OpenIDBundle\ResponseType\IdToken

    oauth2.storage.user_claims.class: LoginCidadao\OpenIDBundle\Storage\UserClaims
    oauth2.storage.public_key.class: LoginCidadao\OpenIDBundle\Storage\PublicKey

    oauth2.scope_manager.class: LoginCidadao\OpenIDBundle\Manager\ScopeManager

    oauth2.server.config:
        use_openid_connect: true
        issuer: %jwt_iss%
        allow_implicit: true
        enforce_state: false
        always_issue_new_refresh_token: true

services:
    oauth2.storage.user_claims:
        class: %oauth2.storage.user_claims.class%
        arguments: [ "@doctrine.orm.entity_manager" ]

    oauth2.storage.public_key:
        class: %oauth2.storage.public_key.class%
        arguments: [ "@doctrine.orm.entity_manager" ]

    oidc.storage.session_state:
        class: %oidc.storage.session_state.class%
        arguments:
            - "@lc.client_manager"
            - "@security.token_storage"
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    oidc.person.serialize.listener:
        class: %oidc.person.serialize.listener.class%
        arguments:
            - "@lc_accesstoken_manager"
            - "@oidc.subject_identifier.service"
            - "@lc.api.version"
        tags:
            - { name: jms_serializer.event_listener, event: serializer.post_serialize, method: onPostSerialize }

    oauth2.response_types.token:
        class: LoginCidadao\OpenIDBundle\ResponseType\AccessToken
        arguments:
            - "@oauth2.storage.access_token"
            - "@oauth2.storage.refresh_token"
            - "%oauth2.server.config%"

    oauth2.response_types.code:
        class: OAuth2\OpenID\ResponseType\AuthorizationCode
        arguments:
            - "@oauth2.storage.authorization_code"
            - "%oauth2.server.config%"

    oauth2.response_types.id_token:
        class: %oauth2.response_types.id_token.class%
        arguments:
            - "@oauth2.storage.user_claims"
            - "@oauth2.storage.public_key"
            - "%oauth2.server.config%"

    oauth2.response_types.id_token_token:
        class: OAuth2\OpenID\ResponseType\IdTokenToken
        arguments:
            - "@oauth2.response_types.token"
            - "@oauth2.response_types.id_token"

    oauth2.response_types.code_id_token:
        class: OAuth2\OpenID\ResponseType\CodeIdToken
        arguments:
            - "@oauth2.response_types.code"
            - "@oauth2.response_types.id_token"

    oauth2.grant_type.refresh_token:
        class: "%oauth2.grant_type.refresh_token.class%"
        arguments:
            - "@oauth2.storage.refresh_token"
            - "%oauth2.server.config%"

    organization.repository:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:
            - LoginCidadao\OAuthBundle\Entity\Organization

    checker.sector_identifier_uri:
        arguments:
            - "@doctrine.orm.entity_manager"
        class: %checker.sector_identifier_uri.class%
        lazy: true

    validator.sector_identifier_uri:
        class: %validator.sector_identifier_uri.class%
        lazy: true
        arguments:
            - "@organization.repository"
            - "@checker.sector_identifier_uri"
        tags:
            - { name: validator.constraint_validator, alias: sector_identifier_uri }

    oidc.core.events_subscriber:
        class: LoginCidadao\OpenIDBundle\EventListener\CoreEventsSubscriber
        arguments:
            - "@oidc.client_metadata.repository"
            - "@checker.sector_identifier_uri"
            - "%revalidate_sector_identifier_uri_on_auth%"
        tags:
            - { name: kernel.event_subscriber }

    lc.client_manager:
        class: LoginCidadao\OpenIDBundle\Manager\ClientManager
        lazy: true
        arguments:
            - "@doctrine.orm.entity_manager"
            - "@event_dispatcher"
            - "@lc.person.repository"
            - "%lc_public_scopes%"

    oidc.subject_identifier.service:
        class: LoginCidadao\OpenIDBundle\Service\SubjectIdentifierService
        arguments:
            - "@doctrine.orm.entity_manager"
            - "@oidc.subject_identifier.repository"
            - %secret%

    oidc.client_metadata.repository:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:
            - LoginCidadao\OpenIDBundle\Entity\ClientMetadata

    oidc.subject_identifier.repository:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:
            - LoginCidadao\OpenIDBundle\Entity\SubjectIdentifier

    lc.oidc.tasks.subscriber:
        class: LoginCidadao\OpenIDBundle\EventListener\TaskSubscriber
        arguments:
            - "@lc.security.helper"
            - "@lc.client_manager"
            - "@lc.oidc.tasks.complete_user_info.validator"
        tags:
            - { name: kernel.event_subscriber }

    lc.oidc.tasks.complete_user_info.validator:
        class: LoginCidadao\OpenIDBundle\Task\CompleteUserInfoTaskValidator
        arguments:
            - "@event_dispatcher"
            - "%pre_authorization.complete_information_task.skip_if_authorized%"

    oidc.oauth.events_subscriber:
        class: LoginCidadao\OpenIDBundle\EventListener\OAuthEventSubscriber
        tags:
            - { name: kernel.event_subscriber }

    oidc.scopes.translation:
        class: LoginCidadao\OpenIDBundle\EventListener\ScopeTranslatorSubscriber
        tags:
            - { name: kernel.event_subscriber }
